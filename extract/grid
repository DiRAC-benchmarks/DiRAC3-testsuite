#!/usr/bin/env python
import argparse, csv, re

def main():

    # Parse command line arguments for list of data files and CSV output file
    parser = argparse.ArgumentParser(description="Parse the output of the Grid benchmark for performance metrics")
    parser.add_argument('files', type=argparse.FileType('r'), help='The datafiles to parse', nargs='+')
    parser.add_argument('csv',   type=argparse.FileType('w'), help='The CSV file to write')
    args = parser.parse_args()

    # Benchmarks
    bench_dict = {'DWF' : 'DWF'
                 ,'READ' : 'READ'
                 ,'fused AXPY' : 'fused-AXPY'
                 ,'a*x + y' : 'a*x+y'
                 ,'SCALE' : 'SCALE'
                 ,'SU3xSU3  x= x*y' : 'SU3xSU3-x=x*y'
                 ,'SU3xSU3  z= x*y' : 'SU3xSU3-z=x*y'
                 ,'SU3xSU3  mult' : 'SU3xSU3-mult'
                 ,'SU3xSU3  mac' : 'SU3xSU3-mac'
                 ,'ZMM' : 'ZMM'}
    bench_name = None

    # CSV file writer
    writer = csv.writer(args.csv)

    # Write from each data file to CSV
    for datafile in args.files:
        for line in iter(datafile):
            line = line[:-1]
            if re.match(r'^Grid.*ms :\s*(= Benchmarking )?(ZMM|SU3|DWF|READ|fused|SCALE|a\*x|L|V|[0-9])',line):
                line = re.sub(r'^Grid.*ms :\s*(= Benchmarking )?', '', line)
                line = re.sub(r'\s*bandwidth', '', line)
                line = re.sub(r'\s*\;.*', '', line)
                line = re.sub(r'\(.*\)', '', line)
                line = re.sub(r'GB/s per thread', 'GB/s-per-thread', line)
                line = re.sub(r' - ', '-', line)
                if line in bench_dict:
                    bench_name = bench_dict[line]
                else:
                    data = line.split()
                    if data[0][0] == 'L' or data[0][0] == 'V':
                        writer.writerow(['Benchmark',] + data)
                    else:
                        writer.writerow([bench_name,] + data)

if __name__ == "__main__":

    main()
