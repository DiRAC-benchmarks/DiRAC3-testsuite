#!/usr/bin/env python
import argparse, csv, re, sys

def main():

    # Parse command line arguments for list of data files and CSV output file
    parser = argparse.ArgumentParser(description="Parse the output of the Walls benchmark for performance metrics")
    parser.add_argument('files', type=argparse.FileType('r'), help='The datafiles to parse', nargs='+')
    parser.add_argument('csv',   type=argparse.FileType('w'), help='The CSV file to write')
    args = parser.parse_args()

    # Regex for parsing data files
    re_omp   = r"(?<=OMP_NUM_THREADS[ =])(?P<ompnumthreads>[0-9]+)\n.*"
    re_grid  = r"(?<=walls_xeon_[34]d )(?P<gridsize>[0-9]+)(?:[\S\s]*?)"
    re_gflop = r"(?<=GFLOP/s = )(?P<gflops>[0-9]*\.?[0-9]*)"
    regex    = re.compile( re_omp + re_grid + re_gflop )

    # Data fields
    fields  = ['OpenMP Threads','Grid Size','GFlop/s']
    nfields = len(fields)

    # CSV file writer
    writer = csv.DictWriter(args.csv, fieldnames=fields)
    writer.writeheader()

    # Write from each data file to CSV
    for datafile in args.files:
        data = regex.findall(datafile.read())
        for entry in data:
            writer.writerow({ fields[n] : entry[n] for n in range(nfields) })

if __name__ == "__main__":

    main()
