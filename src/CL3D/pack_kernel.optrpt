Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_PACK_MESSAGE_LEFT

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(74,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(75,5)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at pack_kernel.f90(76,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at pack_kernel.f90(76,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 1.000 
         remark #15478: estimated potential speedup: 3.690 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at pack_kernel.f90(76,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at pack_kernel.f90(75,5)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at pack_kernel.f90(76,7)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15460: masked strided loads: 1 
         remark #15462: unmasked indexed (or gather) loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 4.000 
         remark #15478: estimated potential speedup: 1.000 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at pack_kernel.f90(76,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_UNPACK_MESSAGE_LEFT

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(131,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(132,5)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at pack_kernel.f90(133,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at pack_kernel.f90(133,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15462: unmasked indexed (or gather) loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 2.870 
         remark #15478: estimated potential speedup: 1.360 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at pack_kernel.f90(133,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at pack_kernel.f90(132,5)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15460: masked strided loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 17 
      remark #15477: vector loop cost: 18.500 
      remark #15478: estimated potential speedup: 0.910 
      remark #15488: --- end vector loop cost summary ---

      LOOP BEGIN at pack_kernel.f90(133,7)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15460: masked strided loads: 1 
         remark #15462: unmasked indexed (or gather) loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 4.000 
         remark #15478: estimated potential speedup: 1.000 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at pack_kernel.f90(133,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_PACK_MESSAGE_RIGHT

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(188,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(189,5)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at pack_kernel.f90(190,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at pack_kernel.f90(190,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15460: masked strided loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 2.500 
         remark #15478: estimated potential speedup: 1.570 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at pack_kernel.f90(190,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at pack_kernel.f90(189,5)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

      LOOP BEGIN at pack_kernel.f90(190,7)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15460: masked strided loads: 1 
         remark #15462: unmasked indexed (or gather) loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 4.000 
         remark #15478: estimated potential speedup: 1.000 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at pack_kernel.f90(190,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_UNPACK_MESSAGE_RIGHT

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(245,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(246,5)
   <Multiversioned v1>
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at pack_kernel.f90(247,7)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at pack_kernel.f90(247,7)
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 1.000 
         remark #15478: estimated potential speedup: 3.690 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at pack_kernel.f90(247,7)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at pack_kernel.f90(246,5)
   <Multiversioned v2>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15460: masked strided loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 17 
      remark #15477: vector loop cost: 18.500 
      remark #15478: estimated potential speedup: 0.910 
      remark #15488: --- end vector loop cost summary ---

      LOOP BEGIN at pack_kernel.f90(247,7)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15460: masked strided loads: 1 
         remark #15462: unmasked indexed (or gather) loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 4.000 
         remark #15478: estimated potential speedup: 1.000 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at pack_kernel.f90(247,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_PACK_MESSAGE_TOP

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(301,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at pack_kernel.f90(303,5)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(304,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at pack_kernel.f90(304,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 3.690 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(304,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at pack_kernel.f90(303,5)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at pack_kernel.f90(304,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15460: masked strided loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(304,7)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_UNPACK_MESSAGE_TOP

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(358,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at pack_kernel.f90(360,5)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(361,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at pack_kernel.f90(361,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 3.690 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(361,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at pack_kernel.f90(360,5)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15460: masked strided loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 23.500 
   remark #15478: estimated potential speedup: 0.930 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at pack_kernel.f90(361,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15460: masked strided loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(361,7)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_PACK_MESSAGE_BOTTOM

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(415,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at pack_kernel.f90(417,5)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(418,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at pack_kernel.f90(418,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 3.690 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(418,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at pack_kernel.f90(417,5)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at pack_kernel.f90(418,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15460: masked strided loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(418,7)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_UNPACK_MESSAGE_BOTTOM

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(472,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at pack_kernel.f90(474,5)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(475,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at pack_kernel.f90(475,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 3.690 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(475,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at pack_kernel.f90(474,5)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15460: masked strided loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 23.500 
   remark #15478: estimated potential speedup: 0.930 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at pack_kernel.f90(475,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15460: masked strided loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(475,7)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_PACK_MESSAGE_BACK

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(529,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at pack_kernel.f90(531,5)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(532,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at pack_kernel.f90(532,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 3.690 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(532,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at pack_kernel.f90(531,5)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at pack_kernel.f90(532,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15460: masked strided loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(532,7)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_UNPACK_MESSAGE_BACK

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(586,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at pack_kernel.f90(588,5)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(589,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at pack_kernel.f90(589,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 3.690 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(589,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at pack_kernel.f90(588,5)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15460: masked strided loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 23.500 
   remark #15478: estimated potential speedup: 0.930 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at pack_kernel.f90(589,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15460: masked strided loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(589,7)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_PACK_MESSAGE_FRONT

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(642,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at pack_kernel.f90(644,5)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(645,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at pack_kernel.f90(645,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 3.690 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(645,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at pack_kernel.f90(644,5)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning

   LOOP BEGIN at pack_kernel.f90(645,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15460: masked strided loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(645,7)
   <Remainder>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: PACK_KERNEL_MODULE::CLOVER_UNPACK_MESSAGE_FRONT

    Report from: Vector optimizations [vec]


LOOP BEGIN at pack_kernel.f90(698,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at pack_kernel.f90(700,5)
<Multiversioned v1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at pack_kernel.f90(701,7)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at pack_kernel.f90(701,7)
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.000 
      remark #15478: estimated potential speedup: 3.690 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(701,7)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

LOOP BEGIN at pack_kernel.f90(700,5)
<Multiversioned v2>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15460: masked strided loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 22 
   remark #15477: vector loop cost: 23.500 
   remark #15478: estimated potential speedup: 0.930 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at pack_kernel.f90(701,7)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15460: masked strided loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 4.000 
      remark #15478: estimated potential speedup: 1.000 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at pack_kernel.f90(701,7)
   <Remainder>
   LOOP END
LOOP END
===========================================================================
