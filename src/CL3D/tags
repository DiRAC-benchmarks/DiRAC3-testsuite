!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CELL_DATA	data.f90	/^   INTEGER,         PARAMETER :: CELL_DATA /;"	v	module:data_module
CFLAGS	Makefile	/^CFLAGS=$(CFLAGS_$(COMPILER)) $(OMP) $(I3E) $(C_OPTIONS) -c $/;"	m
CFLAGS_	Makefile	/^CFLAGS_          = -O3$/;"	m
CFLAGS_CRAY	Makefile	/^  CFLAGS_CRAY     = -O0 -g -em -eD$/;"	m
CFLAGS_CRAY	Makefile	/^CFLAGS_CRAY      = -O3 -em -h list=a$/;"	m
CFLAGS_GNU	Makefile	/^  CFLAGS_GNU       = -O0 -g -O -Wall -Wextra -fbounds-check$/;"	m
CFLAGS_GNU	Makefile	/^CFLAGS_GNU       = -O3 -march=native -funroll-loops$/;"	m
CFLAGS_INTEL	Makefile	/^  CFLAGS_INTEL    = -O0 -g -debug all -traceback$/;"	m
CFLAGS_INTEL	Makefile	/^CFLAGS_INTEL     = -O3 -no-prec-div -restrict -fno-alias $/;"	m
CFLAGS_PATHSCALE	Makefile	/^  CFLAGS_PATHSCALE= -O0 -g$/;"	m
CFLAGS_PATHSCALE	Makefile	/^CFLAGS_PATHSCALE = -O3$/;"	m
CFLAGS_PGI	Makefile	/^  CFLAGS_PGI      = -O0 -g -C -Mchkstk -Ktrap=fp -Mchkfpstk$/;"	m
CFLAGS_PGI	Makefile	/^CFLAGS_PGI       = -fastsse -gopt -Mipa=fast -Mlist$/;"	m
CFLAGS_SUN	Makefile	/^  CFLAGS_SUN      = -g -O0 -xopenmp=noopt -stackvar -u -fpover=yes -C -ftrap=common$/;"	m
CFLAGS_SUN	Makefile	/^CFLAGS_SUN       = -fast -xipo=2$/;"	m
CFLAGS_XL	Makefile	/^  CFLAGS_XL      = -O0 -g -qfullpath -qcheck -qflttrap=ov:zero:invalid:en -qsource -qinitauto=FF -qmaxmem=-1 -qsrcmsg$/;"	m
CFLAGS_XL	Makefile	/^CFLAGS_XL       = -O5 -qipa=partition=large -g -qfullpath -Q -qlistopt -qattr=full -qlist -qreport -qxref=full -qsource -qsuppress=1506-224:1500-036 -qsrcmsg$/;"	m
CHUNK_BACK	data.f90	/^                             ,CHUNK_BACK /;"	v	module:data_module
CHUNK_BOTTOM	data.f90	/^                             ,CHUNK_BOTTOM /;"	v	module:data_module
CHUNK_FRONT	data.f90	/^                             ,CHUNK_FRONT /;"	v	module:data_module
CHUNK_LEFT	data.f90	/^   INTEGER,      PARAMETER :: CHUNK_LEFT /;"	v	module:data_module
CHUNK_RIGHT	data.f90	/^                             ,CHUNK_RIGHT /;"	v	module:data_module
CHUNK_TOP	data.f90	/^                             ,CHUNK_TOP /;"	v	module:data_module
C_MPI_COMPILER	Makefile	/^C_MPI_COMPILER=mpicc$/;"	m
DIVERG	data.f90	/^                                ,DIVERG=/;"	v	module:data_module
EXTERNAL_FACE	data.f90	/^                             ,EXTERNAL_FACE=/;"	v	module:data_module
FIELD_DENSITY0	data.f90	/^   INTEGER,         PARAMETER :: FIELD_DENSITY0 /;"	v	module:data_module
FIELD_DENSITY1	data.f90	/^                                ,FIELD_DENSITY1 /;"	v	module:data_module
FIELD_ENERGY0	data.f90	/^                                ,FIELD_ENERGY0 /;"	v	module:data_module
FIELD_ENERGY1	data.f90	/^                                ,FIELD_ENERGY1 /;"	v	module:data_module
FIELD_MASS_FLUX_X	data.f90	/^                                ,FIELD_MASS_FLUX_X=/;"	v	module:data_module
FIELD_MASS_FLUX_Y	data.f90	/^                                ,FIELD_MASS_FLUX_Y=/;"	v	module:data_module
FIELD_MASS_FLUX_Z	data.f90	/^                                ,FIELD_MASS_FLUX_Z=/;"	v	module:data_module
FIELD_PRESSURE	data.f90	/^                                ,FIELD_PRESSURE /;"	v	module:data_module
FIELD_SOUNDSPEED	data.f90	/^                                ,FIELD_SOUNDSPEED /;"	v	module:data_module
FIELD_VISCOSITY	data.f90	/^                                ,FIELD_VISCOSITY /;"	v	module:data_module
FIELD_VOL_FLUX_X	data.f90	/^                                ,FIELD_VOL_FLUX_X /;"	v	module:data_module
FIELD_VOL_FLUX_Y	data.f90	/^                                ,FIELD_VOL_FLUX_Y /;"	v	module:data_module
FIELD_VOL_FLUX_Z	data.f90	/^                                ,FIELD_VOL_FLUX_Z /;"	v	module:data_module
FIELD_XVEL0	data.f90	/^                                ,FIELD_XVEL0 /;"	v	module:data_module
FIELD_XVEL1	data.f90	/^                                ,FIELD_XVEL1 /;"	v	module:data_module
FIELD_YVEL0	data.f90	/^                                ,FIELD_YVEL0 /;"	v	module:data_module
FIELD_YVEL1	data.f90	/^                                ,FIELD_YVEL1 /;"	v	module:data_module
FIELD_ZVEL0	data.f90	/^                                ,FIELD_ZVEL0 /;"	v	module:data_module
FIELD_ZVEL1	data.f90	/^                                ,FIELD_ZVEL1 /;"	v	module:data_module
FLAGS	Makefile	/^FLAGS=$(FLAGS_$(COMPILER)) $(OMP) $(I3E) $(OPTIONS)$/;"	m
FLAGS_	Makefile	/^  FLAGS_          = -O0 -g$/;"	m
FLAGS_	Makefile	/^FLAGS_          = -O3$/;"	m
FLAGS_CRAY	Makefile	/^  FLAGS_CRAY      = -O0 -g -em -eD$/;"	m
FLAGS_CRAY	Makefile	/^FLAGS_CRAY      = -O3 -em  -h acc_model=fast_addr:no_deep_copy:auto_async_all$/;"	m
FLAGS_GNU	Makefile	/^  FLAGS_GNU       = -O0 -g -O -Wall -Wextra -fbounds-check$/;"	m
FLAGS_GNU	Makefile	/^FLAGS_GNU       = -O3 -march=native -funroll-loops$/;"	m
FLAGS_INTEL	Makefile	/^  FLAGS_INTEL     = -O0 -g -debug all -check all -traceback -check noarg_temp_created$/;"	m
FLAGS_INTEL	Makefile	/^FLAGS_INTEL     = -O3 -no-prec-div$/;"	m
FLAGS_PATHSCALE	Makefile	/^  FLAGS_PATHSCALE = -O0 -g$/;"	m
FLAGS_PATHSCALE	Makefile	/^FLAGS_PATHSCALE = -O3$/;"	m
FLAGS_PGI	Makefile	/^  FLAGS_PGI       = -O0 -g -C -Mchkstk -Ktrap=fp -Mchkfpstk -Mchkptr$/;"	m
FLAGS_PGI	Makefile	/^FLAGS_PGI       = -fastsse -gopt -Mipa=fast -Mlist$/;"	m
FLAGS_SUN	Makefile	/^  FLAGS_SUN       = -g -xopenmp=noopt -stackvar -u -fpover=yes -C -ftrap=common$/;"	m
FLAGS_SUN	Makefile	/^FLAGS_SUN       = -fast -xipo=2 -Xlistv4$/;"	m
FLAGS_XL	Makefile	/^  FLAGS_XL       = -O0 -g -qfullpath -qcheck -qflttrap=ov:zero:invalid:en -qsource -qinitauto=FF -qmaxmem=-1 -qinit=f90ptr -qsigtrap -qextname=flush:ideal_gas_kernel_c:viscosity_kernel_c:pdv_kernel_c:revert_kernel_c:accelerate_kernel_c:flux_calc_kernel_c:advec_cell_kernel_c:advec_mom_kernel_c:reset_field_kernel_c:timer_c:unpack_top_bottom_buffers_c:pack_top_bottom_buffers_c:unpack_left_right_buffers_c:pack_left_right_buffers_c:field_summary_kernel_c:update_halo_kernel_c:generate_chunk_kernel_c:initialise_chunk_kernel_c:calc_dt_kernel_c$/;"	m
FLAGS_XL	Makefile	/^FLAGS_XL       = -O5 -qipa=partition=large -g -qfullpath -Q -qsigtrap -qextname=flush:ideal_gas_kernel_c:viscosity_kernel_c:pdv_kernel_c:revert_kernel_c:accelerate_kernel_c:flux_calc_kernel_c:advec_cell_kernel_c:advec_mom_kernel_c:reset_field_kernel_c:timer_c:unpack_top_bottom_buffers_c:pack_top_bottom_buffers_c:unpack_left_right_buffers_c:pack_left_right_buffers_c:field_summary_kernel_c:update_halo_kernel_c:generate_chunk_kernel_c:initialise_chunk_kernel_c:calc_dt_kernel_c -qlistopt -qattr=full -qlist -qreport -qxref=full -qsource -qsuppress=1506-224:1500-036$/;"	m
FTNREF1D	ftocmacros.h	13;"	d
FTNREF2D	ftocmacros.h	14;"	d
FTNREF3D	ftocmacros.h	15;"	d
FTNREF4D	ftocmacros.h	16;"	d
FTNREF5D	ftocmacros.h	17;"	d
FTNSIZE1D	ftocmacros.h	19;"	d
FTNSIZE2D	ftocmacros.h	20;"	d
FTNSIZE3D	ftocmacros.h	21;"	d
I3E	Makefile	/^  I3E=$(I3E_$(COMPILER))$/;"	m
I3E_CRAY	Makefile	/^  I3E_CRAY      = -hflex_mp=intolerant$/;"	m
I3E_GNU	Makefile	/^  I3E_GNU       = -ffloat-store$/;"	m
I3E_INTEL	Makefile	/^  I3E_INTEL     = -fp-model strict -fp-model source -prec-div -prec-sqrt$/;"	m
I3E_PATHSCALE	Makefile	/^  I3E_PATHSCALE = -mieee-fp$/;"	m
I3E_PGI	Makefile	/^  I3E_PGI       = -Kieee$/;"	m
I3E_SUN	Makefile	/^  I3E_SUN       = -fsimple=0 -fns=no$/;"	m
I3E_XL	Makefile	/^  I3E_XL       = -qfloat=nomaf$/;"	m
MAX	ftocmacros.h	23;"	d
MESSAGE	Makefile	/^  MESSAGE=select a compiler to compile in OpenMP, e.g. make COMPILER=INTEL$/;"	m
MIN	ftocmacros.h	26;"	d
MPI_COMPILER	Makefile	/^MPI_COMPILER=mpif90$/;"	m
NUM_FIELDS	data.f90	/^                                ,NUM_FIELDS /;"	v	module:data_module
OMP	Makefile	/^OMP=$(OMP_$(COMPILER))$/;"	m
OMP_CRAY	Makefile	/^OMP_CRAY      =$/;"	m
OMP_GNU	Makefile	/^OMP_GNU       = -fopenmp$/;"	m
OMP_INTEL	Makefile	/^OMP_INTEL     = -openmp$/;"	m
OMP_PATHSCALE	Makefile	/^OMP_PATHSCALE = -mp$/;"	m
OMP_PGI	Makefile	/^OMP_PGI       = -mp=nonuma$/;"	m
OMP_SUN	Makefile	/^OMP_SUN       = -xopenmp=parallel -vpara$/;"	m
OMP_XL	Makefile	/^OMP_XL        = -qsmp=omp -qthreaded$/;"	m
POMP2_Get_num_regions	pompregions.c	/^size_t POMP2_Get_num_regions()$/;"	f
POMP2_Get_opari2_version	pompregions.c	/^const char* POMP2_Get_opari2_version()$/;"	f
POMP2_Get_required_pomp2_library_version_age	pompregions.c	/^int POMP2_Get_required_pomp2_library_version_age()$/;"	f
POMP2_Get_required_pomp2_library_version_current	pompregions.c	/^int POMP2_Get_required_pomp2_library_version_current()$/;"	f
POMP2_Get_required_pomp2_library_version_revision	pompregions.c	/^int POMP2_Get_required_pomp2_library_version_revision()$/;"	f
POMP2_Init_regions	pompregions.c	/^void POMP2_Init_regions()$/;"	f
PdV	PdV.f90	/^SUBROUTINE PdV(/;"	s	module:PdV_module
PdV	definitions.f90	/^                          ,PdV /;"	k	type:profiler_type
PdV_kernel	PdV_kernel.f90	/^SUBROUTINE PdV_kernel(/;"	s	module:PdV_kernel_module
PdV_kernel_module	PdV_kernel.f90	/^MODULE PdV_kernel_module$/;"	m
PdV_module	PdV.f90	/^MODULE PdV_module$/;"	m
SIGN	ftocmacros.h	28;"	d
SOUND	data.f90	/^   INTEGER,        PARAMETER ::  SOUND /;"	v	module:data_module
SQR	ftocmacros.h	29;"	d
VERTEX_DATA	data.f90	/^   INTEGER,         PARAMETER :: CELL_DATA     = 1,        &$/;"	v	module:data_module
X_FACE_DATA	data.f90	/^                                 VERTEX_DATA   = 2,        &$/;"	v	module:data_module
X_VEL	data.f90	/^                                ,X_VEL /;"	v	module:data_module
Y_FACE_DATA	data.f90	/^                                 X_FACE_DATA   = 3,        &$/;"	v	module:data_module
Y_VEL	data.f90	/^                                ,Y_VEL /;"	v	module:data_module
Z_FACE_DATA	data.f90	/^                                 Y_FACE_DATA   = 4,        &$/;"	v	module:data_module
Z_VEL	data.f90	/^                                ,Z_VEL /;"	v	module:data_module
_FTOC_MACROS_	ftocmacros.h	11;"	d
accelerate	accelerate.f90	/^SUBROUTINE accelerate(/;"	s	module:accelerate_module
accelerate_kernel	accelerate_kernel.f90	/^SUBROUTINE accelerate_kernel(/;"	s	module:accelerate_kernel_module
accelerate_kernel_module	accelerate_kernel.f90	/^MODULE accelerate_kernel_module$/;"	m
accelerate_module	accelerate.f90	/^MODULE accelerate_module$/;"	m
acceleration	definitions.f90	/^                          ,acceleration /;"	k	type:profiler_type
advec_cell_driver	advec_cell_driver.f90	/^SUBROUTINE advec_cell_driver(/;"	s	module:advec_cell_driver_module
advec_cell_driver_module	advec_cell_driver.f90	/^MODULE  advec_cell_driver_module$/;"	m
advec_cell_flop	definitions.f90	/^                          ,advec_cell_flop /;"	k	type:profiler_type
advec_cell_kernel	advec_cell_kernel.f90	/^SUBROUTINE advec_cell_kernel(/;"	s	module:advec_cell_kernel_module
advec_cell_kernel_module	advec_cell_kernel.f90	/^MODULE advec_cell_kernel_module$/;"	m
advec_cell_time	definitions.f90	/^                          ,advec_cell_time /;"	k	type:profiler_type
advec_mom_driver	advec_mom_driver.f90	/^SUBROUTINE advec_mom_driver(/;"	s	module:advec_mom_driver_module
advec_mom_driver_module	advec_mom_driver.f90	/^MODULE advec_mom_driver_module$/;"	m
advec_mom_flop	definitions.f90	/^                          ,advec_mom_flop /;"	k	type:profiler_type
advec_mom_kernel	advec_mom_kernel.f90	/^SUBROUTINE advec_mom_kernel(/;"	s	module:advec_mom_kernel_mod
advec_mom_kernel_mod	advec_mom_kernel.f90	/^MODULE advec_mom_kernel_mod$/;"	m
advec_mom_time	definitions.f90	/^                          ,advec_mom_time /;"	k	type:profiler_type
advect_x	definitions.f90	/^   LOGICAL      :: advect_x$/;"	v	module:definitions_module
advection	advection.f90	/^SUBROUTINE advection(/;"	s	module:advection_module
advection_module	advection.f90	/^MODULE advection_module$/;"	m
back	definitions.f90	/^                       ,back /;"	k	type:field_type
back_boundary	definitions.f90	/^                       ,back_boundary$/;"	k	type:field_type
back_rcv_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: back_rcv_buffer(/;"	k	type:chunk_type
back_snd_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: back_snd_buffer(/;"	k	type:chunk_type
boss	data.f90	/^                               ,boss$/;"	k	type:parallel_type
boss_task	data.f90	/^                               ,boss_task$/;"	k	type:parallel_type
bottom	definitions.f90	/^                       ,bottom /;"	k	type:field_type
bottom_boundary	definitions.f90	/^                       ,bottom_boundary /;"	k	type:field_type
bottom_rcv_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: bottom_rcv_buffer(/;"	k	type:chunk_type
bottom_snd_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: bottom_snd_buffer(/;"	k	type:chunk_type
build_field	build_field.f90	/^SUBROUTINE build_field(/;"	s	module:build_field_module
build_field_module	build_field.f90	/^MODULE build_field_module$/;"	m
calc_dt	calc_dt.f90	/^SUBROUTINE calc_dt(/;"	s	module:calc_dt_module
calc_dt_kernel	calc_dt_kernel.f90	/^SUBROUTINE calc_dt_kernel(/;"	s	module:calc_dt_kernel_module
calc_dt_kernel_module	calc_dt_kernel.f90	/^MODULE calc_dt_kernel_module$/;"	m
calc_dt_module	calc_dt.f90	/^MODULE calc_dt_module$/;"	m
cell_advection	definitions.f90	/^                          ,cell_advection /;"	k	type:profiler_type
celldx	definitions.f90	/^                                                 ,celldx /;"	k	type:field_type
celldy	definitions.f90	/^                                                 ,celldy /;"	k	type:field_type
celldz	definitions.f90	/^                                                 ,celldz /;"	k	type:field_type
cellx	definitions.f90	/^     REAL(KIND=8), DIMENSION(:),   ALLOCATABLE :: cellx /;"	k	type:field_type
celly	definitions.f90	/^                                                 ,celly /;"	k	type:field_type
cellz	definitions.f90	/^                                                 ,cellz /;"	k	type:field_type
chunk_neighbours	definitions.f90	/^     INTEGER         :: chunk_neighbours(/;"	k	type:chunk_type
chunk_type	definitions.f90	/^   TYPE chunk_type$/;"	t	module:definitions_module
chunks	definitions.f90	/^  TYPE(chunk_type),  ALLOCATABLE       :: chunks(/;"	v	module:definitions_module
chunks_per_task	data.f90	/^   INTEGER,        PARAMETER :: chunks_per_task /;"	v	module:data_module
clover_abort	clover.f90	/^SUBROUTINE clover_abort$/;"	s	module:clover_module
clover_allgather	clover.f90	/^SUBROUTINE clover_allgather(/;"	s	module:clover_module
clover_allocate_buffers	clover.f90	/^SUBROUTINE clover_allocate_buffers(/;"	s	module:clover_module
clover_barrier	clover.f90	/^SUBROUTINE clover_barrier$/;"	s	module:clover_module
clover_case_change	parse.f90	/^MODULE clover_case_change$/;"	m
clover_check_error	clover.f90	/^SUBROUTINE clover_check_error(/;"	s	module:clover_module
clover_decompose	clover.f90	/^SUBROUTINE clover_decompose(/;"	s	module:clover_module
clover_exchange	clover.f90	/^SUBROUTINE clover_exchange(/;"	s	module:clover_module
clover_finalize	clover.f90	/^SUBROUTINE clover_finalize$/;"	s	module:clover_module
clover_get_num_chunks	clover.f90	/^SUBROUTINE clover_get_num_chunks(/;"	s	module:clover_module
clover_init_comms	clover.f90	/^SUBROUTINE clover_init_comms$/;"	s	module:clover_module
clover_isitanint_mod	parse.f90	/^MODULE clover_isitanint_mod$/;"	m
clover_leaf	clover_leaf.f90	/^PROGRAM clover_leaf$/;"	p
clover_max	clover.f90	/^SUBROUTINE clover_max(/;"	s	module:clover_module
clover_min	clover.f90	/^SUBROUTINE clover_min(/;"	s	module:clover_module
clover_module	clover.f90	/^MODULE clover_module$/;"	m
clover_pack_back	clover.f90	/^SUBROUTINE clover_pack_back(/;"	s	module:clover_module
clover_pack_bottom	clover.f90	/^SUBROUTINE clover_pack_bottom(/;"	s	module:clover_module
clover_pack_front	clover.f90	/^SUBROUTINE clover_pack_front(/;"	s	module:clover_module
clover_pack_left	clover.f90	/^SUBROUTINE clover_pack_left(/;"	s	module:clover_module
clover_pack_message_back	pack_kernel.f90	/^SUBROUTINE clover_pack_message_back(/;"	s	module:pack_kernel_module
clover_pack_message_bottom	pack_kernel.f90	/^SUBROUTINE clover_pack_message_bottom(/;"	s	module:pack_kernel_module
clover_pack_message_front	pack_kernel.f90	/^SUBROUTINE clover_pack_message_front(/;"	s	module:pack_kernel_module
clover_pack_message_left	pack_kernel.f90	/^SUBROUTINE clover_pack_message_left(/;"	s	module:pack_kernel_module
clover_pack_message_right	pack_kernel.f90	/^SUBROUTINE clover_pack_message_right(/;"	s	module:pack_kernel_module
clover_pack_message_top	pack_kernel.f90	/^SUBROUTINE clover_pack_message_top(/;"	s	module:pack_kernel_module
clover_pack_right	clover.f90	/^SUBROUTINE clover_pack_right(/;"	s	module:clover_module
clover_pack_top	clover.f90	/^SUBROUTINE clover_pack_top(/;"	s	module:clover_module
clover_send_recv_message_back	clover.f90	/^SUBROUTINE clover_send_recv_message_back(/;"	s	module:clover_module
clover_send_recv_message_bottom	clover.f90	/^SUBROUTINE clover_send_recv_message_bottom(/;"	s	module:clover_module
clover_send_recv_message_front	clover.f90	/^SUBROUTINE clover_send_recv_message_front(/;"	s	module:clover_module
clover_send_recv_message_left	clover.f90	/^SUBROUTINE clover_send_recv_message_left(/;"	s	module:clover_module
clover_send_recv_message_right	clover.f90	/^SUBROUTINE clover_send_recv_message_right(/;"	s	module:clover_module
clover_send_recv_message_top	clover.f90	/^SUBROUTINE clover_send_recv_message_top(/;"	s	module:clover_module
clover_sum	clover.f90	/^SUBROUTINE clover_sum(/;"	s	module:clover_module
clover_unpack_back	clover.f90	/^SUBROUTINE clover_unpack_back(/;"	s	module:clover_module
clover_unpack_bottom	clover.f90	/^SUBROUTINE clover_unpack_bottom(/;"	s	module:clover_module
clover_unpack_front	clover.f90	/^SUBROUTINE clover_unpack_front(/;"	s	module:clover_module
clover_unpack_left	clover.f90	/^SUBROUTINE clover_unpack_left(/;"	s	module:clover_module
clover_unpack_message_back	pack_kernel.f90	/^SUBROUTINE clover_unpack_message_back(/;"	s	module:pack_kernel_module
clover_unpack_message_bottom	pack_kernel.f90	/^SUBROUTINE clover_unpack_message_bottom(/;"	s	module:pack_kernel_module
clover_unpack_message_front	pack_kernel.f90	/^SUBROUTINE clover_unpack_message_front(/;"	s	module:pack_kernel_module
clover_unpack_message_left	pack_kernel.f90	/^SUBROUTINE clover_unpack_message_left(/;"	s	module:pack_kernel_module
clover_unpack_message_right	pack_kernel.f90	/^SUBROUTINE clover_unpack_message_right(/;"	s	module:pack_kernel_module
clover_unpack_message_top	pack_kernel.f90	/^SUBROUTINE clover_unpack_message_top(/;"	s	module:pack_kernel_module
clover_unpack_right	clover.f90	/^SUBROUTINE clover_unpack_right(/;"	s	module:clover_module
clover_unpack_top	clover.f90	/^SUBROUTINE clover_unpack_top(/;"	s	module:clover_module
complete	definitions.f90	/^   LOGICAL      :: complete$/;"	v	module:definitions_module
data_module	data.f90	/^MODULE data_module$/;"	m
defined	definitions.f90	/^      LOGICAL            :: defined$/;"	k	type:state_type
definitions_module	definitions.f90	/^MODULE definitions_module$/;"	m
density	definitions.f90	/^      REAL(KIND=8)       :: density /;"	k	type:state_type
density0	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: density0,/;"	k	type:field_type
density1	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: density0,density1$/;"	k	type:field_type
dt	definitions.f90	/^                  ,dt /;"	v	module:definitions_module
dtc	definitions.f90	/^                  ,dtc /;"	v	module:definitions_module
dtc_safe	definitions.f90	/^                  ,dtc_safe /;"	v	module:definitions_module
dtdiv	definitions.f90	/^                  ,dtdiv$/;"	v	module:definitions_module
dtdiv_safe	definitions.f90	/^                  ,dtdiv_safe /;"	v	module:definitions_module
dtinit	definitions.f90	/^                  ,dtinit /;"	v	module:definitions_module
dtmax	definitions.f90	/^                  ,dtmax /;"	v	module:definitions_module
dtmin	definitions.f90	/^                  ,dtmin /;"	v	module:definitions_module
dtold	definitions.f90	/^   REAL(KIND=8) :: dtold /;"	v	module:definitions_module
dtrise	definitions.f90	/^                  ,dtrise /;"	v	module:definitions_module
dtu	definitions.f90	/^                  ,dtu /;"	v	module:definitions_module
dtu_safe	definitions.f90	/^                  ,dtu_safe /;"	v	module:definitions_module
dtv	definitions.f90	/^                  ,dtv /;"	v	module:definitions_module
dtv_safe	definitions.f90	/^                  ,dtv_safe /;"	v	module:definitions_module
dtw	definitions.f90	/^                  ,dtw /;"	v	module:definitions_module
dtw_safe	definitions.f90	/^                  ,dtw_safe /;"	v	module:definitions_module
dummy	parse.f90	/^                       ,dummy=/;"	v	module:parse_module
end_step	definitions.f90	/^   INTEGER      :: end_step$/;"	v	module:definitions_module
end_time	definitions.f90	/^   REAL(KIND=8) :: end_time$/;"	v	module:definitions_module
energy	definitions.f90	/^                           ,energy /;"	k	type:state_type
energy0	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: energy0,/;"	k	type:field_type
energy1	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: energy0,energy1$/;"	k	type:field_type
error_condition	definitions.f90	/^   INTEGER      :: error_condition$/;"	v	module:definitions_module
field	definitions.f90	/^     TYPE(field_/;"	k	type:chunk_type
field_summary	field_summary.f90	/^SUBROUTINE field_summary(/;"	s
field_summary_kernel	field_summary_kernel.f90	/^SUBROUTINE field_summary_kernel(/;"	s	module:field_summary_kernel_module
field_summary_kernel_module	field_summary_kernel.f90	/^MODULE field_summary_kernel_module$/;"	m
field_type	definitions.f90	/^   TYPE field_type$/;"	t	module:definitions_module
flux	definitions.f90	/^                          ,flux /;"	k	type:profiler_type
flux_calc	flux_calc.f90	/^SUBROUTINE flux_calc(/;"	s	module:flux_calc_module
flux_calc_kernel	flux_calc_kernel.f90	/^SUBROUTINE flux_calc_kernel(/;"	s	module:flux_calc_kernel_module
flux_calc_kernel_module	flux_calc_kernel.f90	/^MODULE flux_calc_kernel_module$/;"	m
flux_calc_module	flux_calc.f90	/^MODULE flux_calc_module$/;"	m
front	definitions.f90	/^                       ,front /;"	k	type:field_type
front_boundary	definitions.f90	/^                       ,front_boundary /;"	k	type:field_type
front_rcv_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: back_rcv_buffer(:),front_rcv_buffer(/;"	k	type:chunk_type
front_snd_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: back_snd_buffer(:),front_snd_buffer(/;"	k	type:chunk_type
g_big	data.f90	/^                             ,g_big /;"	v	module:data_module
g_circ	data.f90	/^                                ,g_circ=/;"	v	module:data_module
g_ibig	data.f90	/^   INTEGER,      PARAMETER :: g_ibig=/;"	v	module:data_module
g_in	data.f90	/^   INTEGER         ::            g_in /;"	v	module:data_module
g_len_max	data.f90	/^   INTEGER,        PARAMETER ::g_len_max=/;"	v	module:data_module
g_name_len_max	data.f90	/^   INTEGER,      PARAMETER :: g_name_len_max=/;"	v	module:data_module
g_out	data.f90	/^                                ,g_out$/;"	v	module:data_module
g_point	data.f90	/^                                ,g_point=/;"	v	module:data_module
g_rect	data.f90	/^   INTEGER,                      PARAMETER :: g_rect=/;"	v	module:data_module
g_small	data.f90	/^   REAL(KIND=8), PARAMETER :: g_small=/;"	v	module:data_module
g_version	data.f90	/^   REAL(KIND=8), PARAMETER :: g_version=/;"	v	module:data_module
g_xdir	data.f90	/^                             ,g_xdir=/;"	v	module:data_module
g_ydir	data.f90	/^                             ,g_ydir=/;"	v	module:data_module
g_zdir	data.f90	/^                             ,g_zdir=/;"	v	module:data_module
generate_chunk	generate_chunk.f90	/^SUBROUTINE generate_chunk(/;"	s
generate_chunk_kernel	generate_chunk_kernel.f90	/^SUBROUTINE generate_chunk_kernel(/;"	s	module:generate_chunk_kernel_module
generate_chunk_kernel_module	generate_chunk_kernel.f90	/^MODULE generate_chunk_kernel_module$/;"	m
geometry	definitions.f90	/^      INTEGER            :: geometry$/;"	k	type:state_type
get_unit	initialise.f90	/^FUNCTION get_unit(/;"	f
grid	definitions.f90	/^  TYPE(grid_/;"	v	module:definitions_module
grid_type	definitions.f90	/^   TYPE grid_type$/;"	t	module:definitions_module
halo_exchange	definitions.f90	/^                          ,halo_exchange /;"	k	type:profiler_type
here	parse.f90	/^                           ,here /;"	v	module:parse_module
hydro	hydro.f90	/^SUBROUTINE hydro$/;"	s
ideal_gas	definitions.f90	/^                          ,ideal_gas /;"	k	type:profiler_type
ideal_gas	ideal_gas.f90	/^SUBROUTINE ideal_gas(/;"	s	module:ideal_gas_module
ideal_gas_kernel	ideal_gas_kernel.f90	/^SUBROUTINE ideal_gas_kernel(/;"	s	module:ideal_gas_kernel_module
ideal_gas_kernel_module	ideal_gas_kernel.f90	/^MODULE ideal_gas_kernel_module$/;"	m
ideal_gas_module	ideal_gas.f90	/^MODULE ideal_gas_module$/;"	m
initialise	initialise.f90	/^SUBROUTINE initialise$/;"	s
initialise_chunk	initialise_chunk.f90	/^SUBROUTINE initialise_chunk(/;"	s
initialise_chunk_kernel	initialise_chunk_kernel.f90	/^SUBROUTINE initialise_chunk_kernel(/;"	s	module:initialise_chunk_kernel_module
initialise_chunk_kernel_module	initialise_chunk_kernel.f90	/^MODULE initialise_chunk_kernel_module$/;"	m
isitanint	parse.f90	/^FUNCTION isitanint(/;"	f	module:clover_isitanint_mod
iu	parse.f90	/^  INTEGER         :: iu /;"	v	module:parse_module
jdt	definitions.f90	/^   INTEGER         :: jdt,/;"	v	module:definitions_module
kdt	definitions.f90	/^   INTEGER         :: jdt,kdt$/;"	v	module:definitions_module
left	definitions.f90	/^     INTEGER         :: left /;"	k	type:field_type
left_boundary	definitions.f90	/^                       ,left_boundary /;"	k	type:field_type
left_rcv_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: left_rcv_buffer(/;"	k	type:chunk_type
left_snd_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: left_snd_buffer(/;"	k	type:chunk_type
len_max	parse.f90	/^  INTEGER, PARAMETER :: len_max=/;"	v	module:parse_module
line	parse.f90	/^                           ,line /;"	v	module:parse_module
mask	parse.f90	/^  CHARACTER(LEN=len_max) :: mask /;"	v	module:parse_module
mass_flux_x	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: vol_flux_x,mass_flux_x$/;"	k	type:field_type
mass_flux_y	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: vol_flux_y,mass_flux_y$/;"	k	type:field_type
mass_flux_z	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: vol_flux_z,mass_flux_z$/;"	k	type:field_type
max_task	data.f90	/^      INTEGER         ::        max_task /;"	k	type:parallel_type
mom_advection	definitions.f90	/^                          ,mom_advection /;"	k	type:profiler_type
number_of_chunks	definitions.f90	/^  INTEGER                              :: number_of_chunks$/;"	v	module:definitions_module
number_of_states	definitions.f90	/^   INTEGER                                   :: number_of_states$/;"	v	module:definitions_module
pack_kernel_module	pack_kernel.f90	/^MODULE pack_kernel_module$/;"	m
parallel	data.f90	/^      LOGICAL           ::      parallel /;"	k	type:parallel_type
parallel	data.f90	/^   TYPE(parallel_/;"	v	module:data_module
parallel_type	data.f90	/^   TYPE parallel_type$/;"	t	module:data_module
parse_getival	parse.f90	/^  FUNCTION parse_getival(/;"	f	module:parse_module
parse_getline	parse.f90	/^FUNCTION parse_getline(/;"	f	module:parse_module
parse_getlval	parse.f90	/^  FUNCTION parse_getlval(/;"	f	module:parse_module
parse_getrval	parse.f90	/^  FUNCTION parse_getrval(/;"	f	module:parse_module
parse_getword	parse.f90	/^  RECURSIVE FUNCTION parse_getword(/;"	f	module:parse_module
parse_init	parse.f90	/^FUNCTION parse_init(/;"	f	module:parse_module
parse_module	parse.f90	/^MODULE parse_module$/;"	m
parse_scan	parse.f90	/^  FUNCTION parse_scan(/;"	f	module:parse_module
pressure	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: pressure$/;"	k	type:field_type
profiler	definitions.f90	/^   TYPE(profiler_/;"	v	module:definitions_module
profiler_on	definitions.f90	/^   LOGICAL      :: profiler_on /;"	v	module:definitions_module
profiler_type	definitions.f90	/^   TYPE profiler_type$/;"	t	module:definitions_module
radius	definitions.f90	/^                           ,radius$/;"	k	type:state_type
read_input	read_input.f90	/^SUBROUTINE read_input(/;"	s
report_error	report.f90	/^SUBROUTINE report_error(/;"	s	module:report_module
report_module	report.f90	/^MODULE report_module$/;"	m
reset	definitions.f90	/^                          ,reset /;"	k	type:profiler_type
reset_field	reset_field.f90	/^SUBROUTINE reset_field(/;"	s	module:reset_field_module
reset_field_kernel	reset_field_kernel.f90	/^SUBROUTINE reset_field_kernel(/;"	s	module:reset_field_kernel_module
reset_field_kernel_module	reset_field_kernel.f90	/^MODULE reset_field_kernel_module$/;"	m
reset_field_module	reset_field.f90	/^MODULE reset_field_module$/;"	m
rest	parse.f90	/^                           ,rest$/;"	v	module:parse_module
revert	definitions.f90	/^                          ,revert /;"	k	type:profiler_type
revert	revert.f90	/^SUBROUTINE revert(/;"	s	module:revert_module
revert_kernel	revert_kernel.f90	/^SUBROUTINE revert_kernel(/;"	s	module:revert_kernel_module
revert_kernel_module	revert_kernel.f90	/^MODULE revert_kernel_module$/;"	m
revert_module	revert.f90	/^MODULE revert_module$/;"	m
right	definitions.f90	/^                       ,right /;"	k	type:field_type
right_boundary	definitions.f90	/^                       ,right_boundary /;"	k	type:field_type
right_rcv_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: left_rcv_buffer(:),right_rcv_buffer(/;"	k	type:chunk_type
right_snd_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: left_snd_buffer(:),right_snd_buffer(/;"	k	type:chunk_type
sel	parse.f90	/^                           ,sel /;"	v	module:parse_module
soundspeed	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: soundspeed$/;"	k	type:field_type
start	start.f90	/^SUBROUTINE start$/;"	s
state_type	definitions.f90	/^   TYPE state_type$/;"	t	module:definitions_module
states	definitions.f90	/^   TYPE(state_type), ALLOCATABLE             :: states(/;"	v	module:definitions_module
step	definitions.f90	/^   INTEGER      :: step$/;"	v	module:definitions_module
summary	definitions.f90	/^                          ,summary /;"	k	type:profiler_type
summary_frequency	definitions.f90	/^                  ,summary_frequency$/;"	v	module:definitions_module
task	data.f90	/^                               ,task /;"	k	type:parallel_type
task	definitions.f90	/^     INTEGER         :: task /;"	k	type:chunk_type
test_problem	definitions.f90	/^   INTEGER      :: test_problem$/;"	v	module:definitions_module
time	definitions.f90	/^                  ,time /;"	v	module:definitions_module
timer	timer.f90	/^FUNCTION timer(/;"	f
timer_c_	timer_c.c	/^void timer_c_( double *elapsed_time)$/;"	f
timestep	definitions.f90	/^     REAL(KIND=8)       :: timestep /;"	k	type:profiler_type
timestep	timestep.f90	/^SUBROUTINE timestep(/;"	s	module:timestep_module
timestep_module	timestep.f90	/^MODULE timestep_module$/;"	m
tolower	parse.f90	/^FUNCTION tolower(/;"	f	module:clover_case_change
top	definitions.f90	/^                       ,top /;"	k	type:field_type
top_boundary	definitions.f90	/^                       ,top_boundary /;"	k	type:field_type
top_rcv_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: bottom_rcv_buffer(:),top_rcv_buffer(/;"	k	type:chunk_type
top_snd_buffer	definitions.f90	/^     REAL(KIND=8),ALLOCATABLE:: bottom_snd_buffer(:),top_snd_buffer(/;"	k	type:chunk_type
toupper	parse.f90	/^FUNCTION toupper(/;"	f	module:clover_case_change
update_halo	update_halo.f90	/^SUBROUTINE update_halo(/;"	s	module:update_halo_module
update_halo_kernel	update_halo_kernel.f90	/^  SUBROUTINE update_halo_kernel(/;"	s	module:update_halo_kernel_module
update_halo_kernel_module	update_halo_kernel.f90	/^MODULE update_halo_kernel_module$/;"	m
update_halo_module	update_halo.f90	/^MODULE update_halo_module$/;"	m
use_fortran_kernels	definitions.f90	/^   LOGICAL      :: use_fortran_kernels$/;"	v	module:definitions_module
vertexdx	definitions.f90	/^                                                 ,vertexdx /;"	k	type:field_type
vertexdy	definitions.f90	/^                                                 ,vertexdy /;"	k	type:field_type
vertexdz	definitions.f90	/^                                                 ,vertexdz$/;"	k	type:field_type
vertexx	definitions.f90	/^                                                 ,vertexx /;"	k	type:field_type
vertexy	definitions.f90	/^                                                 ,vertexy /;"	k	type:field_type
vertexz	definitions.f90	/^                                                 ,vertexz /;"	k	type:field_type
viscosity	definitions.f90	/^                          ,viscosity /;"	k	type:profiler_type
viscosity	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: viscosity$/;"	k	type:field_type
viscosity	viscosity.f90	/^SUBROUTINE viscosity(/;"	s	module:viscosity_module
viscosity_kernel	viscosity_kernel.f90	/^SUBROUTINE viscosity_kernel(/;"	s	module:viscosity_kernel_module
viscosity_kernel_module	viscosity_kernel.f90	/^MODULE viscosity_kernel_module$/;"	m
viscosity_module	viscosity.f90	/^MODULE viscosity_module$/;"	m
visit	definitions.f90	/^                          ,visit /;"	k	type:profiler_type
visit	visit.f90	/^SUBROUTINE visit$/;"	s
visit_frequency	definitions.f90	/^   INTEGER      :: visit_frequency /;"	v	module:definitions_module
vol_flux_x	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: vol_flux_x,/;"	k	type:field_type
vol_flux_y	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: vol_flux_y,/;"	k	type:field_type
vol_flux_z	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: vol_flux_z,/;"	k	type:field_type
volume	definitions.f90	/^     REAL(KIND=8), DIMENSION(:,:,:), ALLOCATABLE :: volume /;"	k	type:field_type
work_array1	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: work_array1 /;"	k	type:field_type
work_array2	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: work_array2 /;"	k	type:field_type
work_array3	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: work_array3 /;"	k	type:field_type
work_array4	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: work_array4 /;"	k	type:field_type
work_array5	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: work_array5 /;"	k	type:field_type
work_array6	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: work_array6 /;"	k	type:field_type
work_array7	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: work_array7 /;"	k	type:field_type
x_cells	definitions.f90	/^     INTEGER            :: x_cells /;"	k	type:grid_type
x_max	definitions.f90	/^                       ,x_max /;"	k	type:field_type
x_min	definitions.f90	/^     INTEGER         :: x_min /;"	k	type:field_type
xarea	definitions.f90	/^                                                 ,xarea /;"	k	type:field_type
xmax	definitions.f90	/^                           ,xmax /;"	k	type:state_type
xmax	definitions.f90	/^                          ,xmax /;"	k	type:grid_type
xmin	definitions.f90	/^      REAL(KIND=8)       :: xmin /;"	k	type:state_type
xmin	definitions.f90	/^     REAL(KIND=8)       :: xmin /;"	k	type:grid_type
xvel	definitions.f90	/^                           ,xvel /;"	k	type:state_type
xvel0	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: xvel0,/;"	k	type:field_type
xvel1	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: xvel0,xvel1$/;"	k	type:field_type
y_cells	definitions.f90	/^                          ,y_cells /;"	k	type:grid_type
y_max	definitions.f90	/^                       ,y_max /;"	k	type:field_type
y_min	definitions.f90	/^                       ,y_min /;"	k	type:field_type
yarea	definitions.f90	/^                                                 ,yarea /;"	k	type:field_type
ymax	definitions.f90	/^                           ,ymax /;"	k	type:state_type
ymax	definitions.f90	/^                          ,ymax /;"	k	type:grid_type
ymin	definitions.f90	/^                           ,ymin /;"	k	type:state_type
ymin	definitions.f90	/^                          ,ymin /;"	k	type:grid_type
yvel	definitions.f90	/^                           ,yvel /;"	k	type:state_type
yvel0	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: yvel0,/;"	k	type:field_type
yvel1	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: yvel0,yvel1$/;"	k	type:field_type
z_cells	definitions.f90	/^                          ,z_cells$/;"	k	type:grid_type
z_max	definitions.f90	/^                       ,z_max$/;"	k	type:field_type
z_min	definitions.f90	/^                       ,z_min /;"	k	type:field_type
zarea	definitions.f90	/^                                                 ,zarea$/;"	k	type:field_type
zmax	definitions.f90	/^                           ,zmax /;"	k	type:state_type
zmax	definitions.f90	/^                          ,zmax$/;"	k	type:grid_type
zmin	definitions.f90	/^                           ,zmin /;"	k	type:state_type
zmin	definitions.f90	/^                          ,zmin /;"	k	type:grid_type
zvel	definitions.f90	/^                           ,zvel$/;"	k	type:state_type
zvel0	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: zvel0,/;"	k	type:field_type
zvel1	definitions.f90	/^     REAL(KIND=8),    DIMENSION(:,:,:), ALLOCATABLE :: zvel0,zvel1$/;"	k	type:field_type
