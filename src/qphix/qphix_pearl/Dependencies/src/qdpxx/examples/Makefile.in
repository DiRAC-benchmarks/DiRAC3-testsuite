# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
@BUILD_LIBINTRIN_TRUE@am__append_1 = -I@top_srcdir@/other_libs/@LIBINTRIN_DIR@/include \
@BUILD_LIBINTRIN_TRUE@               -I@top_builddir@/other_libs/@LIBINTRIN_DIR@/include

@BUILD_FILEDB_TRUE@am__append_2 = -I@top_srcdir@/other_libs/filedb/src \
@BUILD_FILEDB_TRUE@               -I@top_srcdir@/other_libs/filedb/filehash

@QDP_USE_LIBXML2_TRUE@am__append_3 = -L@top_builddir@/other_libs/qio/lib \
@QDP_USE_LIBXML2_TRUE@             -L@top_builddir@/other_libs/qio/other_libs/c-lime/lib \
@QDP_USE_LIBXML2_TRUE@             -L@top_builddir@/other_libs/xpath_reader/lib

@BUILD_LIBINTRIN_TRUE@am__append_4 = -L@top_builddir@/other_libs/libintrin/lib
@BUILD_FILEDB_TRUE@am__append_5 = -L@top_builddir@/other_libs/filedb/src \
@BUILD_FILEDB_TRUE@              -L@top_builddir@/other_libs/filedb/filehash

@QDP_USE_HDF5_TRUE@am__append_6 = @HDF5_LIBS@
@QDP_USE_LIBXML2_TRUE@am__append_7 = -lXPathReader -lxmlWriter -lqio -llime
@BUILD_LIBINTRIN_TRUE@am__append_8 = -lintrin
@BUILD_FILEDB_TRUE@am__append_9 = -lfiledb -lfilehash
check_PROGRAMS = t_skeleton$(EXEEXT) t_io$(EXEEXT) t_mesplq$(EXEEXT) \
	t_db$(EXEEXT) t_xml$(EXEEXT) t_entry$(EXEEXT) t_nersc$(EXEEXT) \
	t_shift$(EXEEXT) t_exotic$(EXEEXT) t_basic$(EXEEXT) \
	t_qio$(EXEEXT) t_cugauge$(EXEEXT) t_transpose_spin$(EXEEXT) \
	t_partfile$(EXEEXT) t_su3$(EXEEXT) t_map_obj_disk$(EXEEXT) \
	t_map_obj_memory$(EXEEXT) t_clov_force$(EXEEXT) \
	$(am__EXEEXT_2) $(am__EXEEXT_3)
EXTRA_PROGRAMS = t_qio_factory$(EXEEXT) t_gsum$(EXEEXT) \
	t_iprod$(EXEEXT) $(am__EXEEXT_1) nersc2ildg$(EXEEXT) \
	test_ildglat$(EXEEXT) lhpc2ildg$(EXEEXT)
@BUILD_WILSON_EXAMPLES_TRUE@am__append_10 = t_dslashm t_formfac t_spectrum t_qdp t_linalg 
@BUILD_WILSON_EXAMPLES_TRUE@am__append_11 = t_subtype t_foo t_blas t_cblas t_blas_g5 t_blas_g5_2 t_blas_g5_3 t_spinproj t_spinproj2
@BUILD_STAGGERED_EXAMPLES_TRUE@am__append_12 = 
subdir = examples
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/qdp_config_internal.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@BUILD_WILSON_EXAMPLES_TRUE@am__EXEEXT_1 = t_subtype$(EXEEXT) \
@BUILD_WILSON_EXAMPLES_TRUE@	t_foo$(EXEEXT) t_blas$(EXEEXT) \
@BUILD_WILSON_EXAMPLES_TRUE@	t_cblas$(EXEEXT) \
@BUILD_WILSON_EXAMPLES_TRUE@	t_blas_g5$(EXEEXT) \
@BUILD_WILSON_EXAMPLES_TRUE@	t_blas_g5_2$(EXEEXT) \
@BUILD_WILSON_EXAMPLES_TRUE@	t_blas_g5_3$(EXEEXT) \
@BUILD_WILSON_EXAMPLES_TRUE@	t_spinproj$(EXEEXT) \
@BUILD_WILSON_EXAMPLES_TRUE@	t_spinproj2$(EXEEXT)
@BUILD_WILSON_EXAMPLES_TRUE@am__EXEEXT_2 = t_dslashm$(EXEEXT) \
@BUILD_WILSON_EXAMPLES_TRUE@	t_formfac$(EXEEXT) \
@BUILD_WILSON_EXAMPLES_TRUE@	t_spectrum$(EXEEXT) t_qdp$(EXEEXT) \
@BUILD_WILSON_EXAMPLES_TRUE@	t_linalg$(EXEEXT)
am__EXEEXT_3 =
am__objects_1 =
am_lhpc2ildg_OBJECTS = lhpc2ildg.$(OBJEXT) $(am__objects_1) \
	mesplq.$(OBJEXT)
lhpc2ildg_OBJECTS = $(am_lhpc2ildg_OBJECTS)
lhpc2ildg_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
am_nersc2ildg_OBJECTS = nersc2ildg.$(OBJEXT) $(am__objects_1) \
	mesplq.$(OBJEXT)
nersc2ildg_OBJECTS = $(am_nersc2ildg_OBJECTS)
nersc2ildg_LDADD = $(LDADD)
nersc2ildg_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_basic_OBJECTS = t_basic.$(OBJEXT)
t_basic_OBJECTS = $(am_t_basic_OBJECTS)
t_basic_LDADD = $(LDADD)
t_basic_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_blas_OBJECTS = t_blas.$(OBJEXT) blas1.$(OBJEXT)
t_blas_OBJECTS = $(am_t_blas_OBJECTS)
t_blas_LDADD = $(LDADD)
am_t_blas_g5_OBJECTS = t_blas_g5.$(OBJEXT) $(am__objects_1)
t_blas_g5_OBJECTS = $(am_t_blas_g5_OBJECTS)
t_blas_g5_LDADD = $(LDADD)
t_blas_g5_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_blas_g5_2_OBJECTS = t_blas_g5_2.$(OBJEXT) $(am__objects_1)
t_blas_g5_2_OBJECTS = $(am_t_blas_g5_2_OBJECTS)
t_blas_g5_2_LDADD = $(LDADD)
t_blas_g5_2_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_blas_g5_3_OBJECTS = t_blas_g5_3.$(OBJEXT) $(am__objects_1)
t_blas_g5_3_OBJECTS = $(am_t_blas_g5_3_OBJECTS)
t_blas_g5_3_LDADD = $(LDADD)
t_blas_g5_3_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_cblas_OBJECTS = t_cblas.$(OBJEXT) cblas1.$(OBJEXT)
t_cblas_OBJECTS = $(am_t_cblas_OBJECTS)
t_cblas_LDADD = $(LDADD)
t_cblas_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_clov_force_OBJECTS = t_clov_force.$(OBJEXT) reunit.$(OBJEXT) \
	$(am__objects_1)
t_clov_force_OBJECTS = $(am_t_clov_force_OBJECTS)
t_clov_force_LDADD = $(LDADD)
am_t_cugauge_OBJECTS = t_cugauge.$(OBJEXT) mesplq.$(OBJEXT) \
	$(am__objects_1)
t_cugauge_OBJECTS = $(am_t_cugauge_OBJECTS)
t_cugauge_LDADD = $(LDADD)
t_cugauge_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_db_OBJECTS = t_db.$(OBJEXT) $(am__objects_1)
t_db_OBJECTS = $(am_t_db_OBJECTS)
t_db_LDADD = $(LDADD)
t_db_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_dslashm_OBJECTS = t_dslashm.$(OBJEXT) dslashm_w.$(OBJEXT) \
	$(am__objects_1)
t_dslashm_OBJECTS = $(am_t_dslashm_OBJECTS)
t_dslashm_LDADD = $(LDADD)
t_dslashm_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_entry_OBJECTS = t_entry.$(OBJEXT) $(am__objects_1)
t_entry_OBJECTS = $(am_t_entry_OBJECTS)
t_entry_LDADD = $(LDADD)
t_entry_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_exotic_OBJECTS = t_exotic.$(OBJEXT) rgauge.$(OBJEXT) \
	taproj.$(OBJEXT) expm12.$(OBJEXT) reunit.$(OBJEXT) \
	$(am__objects_1)
t_exotic_OBJECTS = $(am_t_exotic_OBJECTS)
t_exotic_LDADD = $(LDADD)
t_exotic_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_foo_OBJECTS = t_foo.$(OBJEXT) $(am__objects_1)
t_foo_OBJECTS = $(am_t_foo_OBJECTS)
t_foo_LDADD = $(LDADD)
t_foo_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_formfac_OBJECTS = t_formfac.$(OBJEXT) formfac_w.$(OBJEXT) \
	$(am__objects_1)
t_formfac_OBJECTS = $(am_t_formfac_OBJECTS)
t_formfac_LDADD = $(LDADD)
t_formfac_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_gsum_OBJECTS = t_gsum.$(OBJEXT)
t_gsum_OBJECTS = $(am_t_gsum_OBJECTS)
t_gsum_LDADD = $(LDADD)
am_t_io_OBJECTS = t_io.$(OBJEXT) $(am__objects_1)
t_io_OBJECTS = $(am_t_io_OBJECTS)
t_io_LDADD = $(LDADD)
t_io_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_iprod_OBJECTS = t_iprod.$(OBJEXT)
t_iprod_OBJECTS = $(am_t_iprod_OBJECTS)
t_iprod_LDADD = $(LDADD)
am_t_linalg_OBJECTS = t_linalg.$(OBJEXT) linalg1.$(OBJEXT)
t_linalg_OBJECTS = $(am_t_linalg_OBJECTS)
t_linalg_LDADD = $(LDADD)
t_linalg_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_map_obj_disk_OBJECTS = t_map_obj_disk.$(OBJEXT) $(am__objects_1)
t_map_obj_disk_OBJECTS = $(am_t_map_obj_disk_OBJECTS)
t_map_obj_disk_LDADD = $(LDADD)
t_map_obj_disk_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_t_map_obj_memory_OBJECTS = t_map_obj_memory.$(OBJEXT) \
	$(am__objects_1)
t_map_obj_memory_OBJECTS = $(am_t_map_obj_memory_OBJECTS)
t_map_obj_memory_LDADD = $(LDADD)
t_map_obj_memory_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_t_mesplq_OBJECTS = t_mesplq.$(OBJEXT) mesplq.$(OBJEXT) \
	reunit.$(OBJEXT) $(am__objects_1)
t_mesplq_OBJECTS = $(am_t_mesplq_OBJECTS)
t_mesplq_LDADD = $(LDADD)
t_mesplq_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_nersc_OBJECTS = t_nersc.$(OBJEXT) mesplq.$(OBJEXT) \
	reunit.$(OBJEXT) $(am__objects_1)
t_nersc_OBJECTS = $(am_t_nersc_OBJECTS)
t_nersc_LDADD = $(LDADD)
t_nersc_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_partfile_OBJECTS = t_partfile.$(OBJEXT) $(am__objects_1)
t_partfile_OBJECTS = $(am_t_partfile_OBJECTS)
t_partfile_LDADD = $(LDADD)
am_t_qdp_OBJECTS = t_qdp.$(OBJEXT) formfac_w.$(OBJEXT) \
	dslashm_w.$(OBJEXT) baryon_w.$(OBJEXT) mesons_w.$(OBJEXT) \
	mesplq.$(OBJEXT) reunit.$(OBJEXT) $(am__objects_1)
t_qdp_OBJECTS = $(am_t_qdp_OBJECTS)
t_qdp_LDADD = $(LDADD)
t_qdp_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_qio_OBJECTS = t_qio.$(OBJEXT) $(am__objects_1)
t_qio_OBJECTS = $(am_t_qio_OBJECTS)
t_qio_LDADD = $(LDADD)
am_t_qio_factory_OBJECTS = t_qio_factory.$(OBJEXT) $(am__objects_1)
t_qio_factory_OBJECTS = $(am_t_qio_factory_OBJECTS)
t_qio_factory_LDADD = $(LDADD)
am_t_shift_OBJECTS = t_shift.$(OBJEXT) $(am__objects_1)
t_shift_OBJECTS = $(am_t_shift_OBJECTS)
t_shift_LDADD = $(LDADD)
t_shift_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_skeleton_OBJECTS = t_skeleton.$(OBJEXT)
t_skeleton_OBJECTS = $(am_t_skeleton_OBJECTS)
t_skeleton_LDADD = $(LDADD)
t_skeleton_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_spectrum_OBJECTS = t_spectrum.$(OBJEXT) baryon_w.$(OBJEXT) \
	mesons_w.$(OBJEXT) mesplq.$(OBJEXT) $(am__objects_1)
t_spectrum_OBJECTS = $(am_t_spectrum_OBJECTS)
t_spectrum_LDADD = $(LDADD)
t_spectrum_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_spinproj_OBJECTS = t_spinproj.$(OBJEXT)
t_spinproj_OBJECTS = $(am_t_spinproj_OBJECTS)
t_spinproj_LDADD = $(LDADD)
t_spinproj_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_spinproj2_OBJECTS = t_spinproj2.$(OBJEXT)
t_spinproj2_OBJECTS = $(am_t_spinproj2_OBJECTS)
t_spinproj2_LDADD = $(LDADD)
t_spinproj2_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_su3_OBJECTS = t_su3.$(OBJEXT)
t_su3_OBJECTS = $(am_t_su3_OBJECTS)
t_su3_LDADD = $(LDADD)
am_t_subtype_OBJECTS = t_subtype.$(OBJEXT) $(am__objects_1)
t_subtype_OBJECTS = $(am_t_subtype_OBJECTS)
t_subtype_LDADD = $(LDADD)
t_subtype_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_t_transpose_spin_OBJECTS = t_transpose_spin.$(OBJEXT) \
	$(am__objects_1)
t_transpose_spin_OBJECTS = $(am_t_transpose_spin_OBJECTS)
t_transpose_spin_LDADD = $(LDADD)
t_transpose_spin_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_t_xml_OBJECTS = t_xml.$(OBJEXT) $(am__objects_1)
t_xml_OBJECTS = $(am_t_xml_OBJECTS)
t_xml_LDADD = $(LDADD)
t_xml_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_ildglat_OBJECTS = test_ildglat.$(OBJEXT) $(am__objects_1) \
	mesplq.$(OBJEXT)
test_ildglat_OBJECTS = $(am_test_ildglat_OBJECTS)
test_ildglat_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(lhpc2ildg_SOURCES) $(nersc2ildg_SOURCES) \
	$(t_basic_SOURCES) $(t_blas_SOURCES) $(t_blas_g5_SOURCES) \
	$(t_blas_g5_2_SOURCES) $(t_blas_g5_3_SOURCES) \
	$(t_cblas_SOURCES) $(t_clov_force_SOURCES) \
	$(t_cugauge_SOURCES) $(t_db_SOURCES) $(t_dslashm_SOURCES) \
	$(t_entry_SOURCES) $(t_exotic_SOURCES) $(t_foo_SOURCES) \
	$(t_formfac_SOURCES) $(t_gsum_SOURCES) $(t_io_SOURCES) \
	$(t_iprod_SOURCES) $(t_linalg_SOURCES) \
	$(t_map_obj_disk_SOURCES) $(t_map_obj_memory_SOURCES) \
	$(t_mesplq_SOURCES) $(t_nersc_SOURCES) $(t_partfile_SOURCES) \
	$(t_qdp_SOURCES) $(t_qio_SOURCES) $(t_qio_factory_SOURCES) \
	$(t_shift_SOURCES) $(t_skeleton_SOURCES) $(t_spectrum_SOURCES) \
	$(t_spinproj_SOURCES) $(t_spinproj2_SOURCES) $(t_su3_SOURCES) \
	$(t_subtype_SOURCES) $(t_transpose_spin_SOURCES) \
	$(t_xml_SOURCES) $(test_ildglat_SOURCES)
DIST_SOURCES = $(lhpc2ildg_SOURCES) $(nersc2ildg_SOURCES) \
	$(t_basic_SOURCES) $(t_blas_SOURCES) $(t_blas_g5_SOURCES) \
	$(t_blas_g5_2_SOURCES) $(t_blas_g5_3_SOURCES) \
	$(t_cblas_SOURCES) $(t_clov_force_SOURCES) \
	$(t_cugauge_SOURCES) $(t_db_SOURCES) $(t_dslashm_SOURCES) \
	$(t_entry_SOURCES) $(t_exotic_SOURCES) $(t_foo_SOURCES) \
	$(t_formfac_SOURCES) $(t_gsum_SOURCES) $(t_io_SOURCES) \
	$(t_iprod_SOURCES) $(t_linalg_SOURCES) \
	$(t_map_obj_disk_SOURCES) $(t_map_obj_memory_SOURCES) \
	$(t_mesplq_SOURCES) $(t_nersc_SOURCES) $(t_partfile_SOURCES) \
	$(t_qdp_SOURCES) $(t_qio_SOURCES) $(t_qio_factory_SOURCES) \
	$(t_shift_SOURCES) $(t_skeleton_SOURCES) $(t_spectrum_SOURCES) \
	$(t_spinproj_SOURCES) $(t_spinproj2_SOURCES) $(t_su3_SOURCES) \
	$(t_subtype_SOURCES) $(t_transpose_spin_SOURCES) \
	$(t_xml_SOURCES) $(test_ildglat_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
ARCH_SITE = @ARCH_SITE@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BAGEL_QDP_CONFIG = @BAGEL_QDP_CONFIG@
BAGEL_QDP_CXXFLAGS = @BAGEL_QDP_CXXFLAGS@
BAGEL_QDP_LDFLAGS = @BAGEL_QDP_LDFLAGS@
BAGEL_QDP_LIBS = @BAGEL_QDP_LIBS@
CONFIG_ALIGNMENT = @CONFIG_ALIGNMENT@
CONFIG_GENERICS = @CONFIG_GENERICS@
CONFIG_HDF5 = @CONFIG_HDF5@
CONFIG_LAYOUT = @CONFIG_LAYOUT@
CONFIG_NC = @CONFIG_NC@
CONFIG_ND = @CONFIG_ND@
CONFIG_NS = @CONFIG_NS@
CONFIG_PARALLEL_ARCH = @CONFIG_PARALLEL_ARCH@
CONFIG_PRECISION = @CONFIG_PRECISION@
CONFIG_SSE = @CONFIG_SSE@
CONFIG_SSE2 = @CONFIG_SSE2@
CONFIG_SSE3 = @CONFIG_SSE3@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DVIPDF = @DVIPDF@
DVIPS = @DVIPS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
FILEDB_DIR = @FILEDB_DIR@
HDF5_BIN = @HDF5_BIN@
HDF5_CFLAGS = @HDF5_CFLAGS@
HDF5_CXXFLAGS = @HDF5_CXXFLAGS@
HDF5_LDFLAGS = @HDF5_LDFLAGS@
HDF5_LIBS = @HDF5_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LDFLAGS = @LDFLAGS@
LIBINTRIN_DIR = @LIBINTRIN_DIR@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBXML2_CONFIG = @LIBXML2_CONFIG@
LIBXML2_CXXFLAGS = @LIBXML2_CXXFLAGS@
LIBXML2_LIBS = @LIBXML2_LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
QMP_CFLAGS = @QMP_CFLAGS@
QMP_CONFIG = @QMP_CONFIG@
QMP_HOME = @QMP_HOME@
QMP_LDFLAGS = @QMP_LDFLAGS@
QMP_LIBS = @QMP_LIBS@
QMT_CXXFLAGS = @QMT_CXXFLAGS@
QMT_HOME = @QMT_HOME@
QMT_LDFLAGS = @QMT_LDFLAGS@
QMT_LIBS = @QMT_LIBS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

#
# Boiler Plate stuff: Autoconf Substitutions etc
#
AM_CXXFLAGS = -I@top_srcdir@/include -I@top_builddir@/include \
	-I@top_srcdir@/other_libs/qio/include \
	-I@top_builddir@/other_libs/qio/include \
	-I@top_srcdir@/other_libs/qio/other_libs/c-lime/include \
	-I@top_builddir@/other_libs/qio/other_libs/c-lime/include \
	-I@top_srcdir@/other_libs/xpath_reader/include \
	@BAGEL_QDP_CXXFLAGS@ @HDF5_CXXFLAGS@ @LIBXML2_CXXFLAGS@ \
	@QMP_CFLAGS@ @QMT_CXXFLAGS@ $(am__append_1) $(am__append_2)
AM_LDFLAGS = -L@top_builddir@/lib $(am__append_3) @LDFLAGS@ \
	@BAGEL_QDP_LDFLAGS@ @HDF5_LDFLAGS@ @QMP_LDFLAGS@ @QMT_LDFLAGS@ \
	$(am__append_4) $(am__append_5)
LDADD = -lqdp $(am__append_6) $(am__append_7) @BAGEL_QDP_LIBS@ \
	@LIBXML2_LIBS@ @QMP_LIBS@ @QMT_LIBS@ @LIBS@ $(am__append_8) \
	$(am__append_9)

#
# Local Headers
#
HDRS = examples.h 

#
# The program and its dependencies
t_skeleton_SOURCES = t_skeleton.cc
t_foo_SOURCES = t_foo.cc $(HDRS)
t_subtype_SOURCES = t_subtype.cc $(HDRS)
t_xml_SOURCES = t_xml.cc $(HDRS)
t_qio_SOURCES = t_qio.cc $(HDRS)
t_qio_DEPENDENCIES = build_lib rebuild_other_libs
t_qio_factory_SOURCES = t_qio_factory.cc $(HDRS)
t_qio_factory_DEPENDENCIES = build_lib rebuild_other_libs
t_partfile_SOURCES = t_partfile.cc $(HDRS) \
	unittest.h testOpenPartFile.h

t_partfile_DEPENDENCIES = build_lib rebuild_other_libs
t_basic_SOURCES = t_basic.cc
t_shift_SOURCES = t_shift.cc $(HDRS)
t_io_SOURCES = t_io.cc $(HDRS)
t_entry_SOURCES = t_entry.cc $(HDRS)
t_nersc_SOURCES = t_nersc.cc mesplq.cc reunit.cc $(HDRS)
t_dslashm_SOURCES = t_dslashm.cc dslashm_w.cc $(HDRS)
t_mesplq_SOURCES = t_mesplq.cc mesplq.cc reunit.cc $(HDRS)
t_exotic_SOURCES = t_exotic.cc rgauge.cc taproj.cc expm12.cc reunit.cc $(HDRS)
t_formfac_SOURCES = t_formfac.cc formfac_w.cc $(HDRS)
t_spectrum_SOURCES = t_spectrum.cc baryon_w.cc mesons_w.cc mesplq.cc $(HDRS)
t_qdp_SOURCES = t_qdp.cc formfac_w.cc dslashm_w.cc baryon_w.cc \
	 mesons_w.cc mesplq.cc reunit.cc $(HDRS)

t_linalg_SOURCES = t_linalg.cc linalg1.cc linalg.h
t_blas_SOURCES = t_blas.cc blas1.cc blas1.h
t_blas_DEPENDENCIES = build_lib
t_gsum_SOURCES = t_gsum.cc
t_gsum_DEPENDENCIES = build_lib
t_iprod_SOURCES = t_iprod.cc
t_iprod_DEPENDENCIES = build_lib
t_cblas_SOURCES = t_cblas.cc cblas1.cc cblas1.h 
t_clov_force_SOURCES = t_clov_force.cc reunit.cc $(HDRS)
t_clov_force_DEPENDENCIES = build_lib
t_db_SOURCES = t_db.cc $(HDRS)
t_map_obj_disk_SOURCES = t_map_obj_disk.cc $(HDRS)
t_map_obj_memory_SOURCES = t_map_obj_memory.cc $(HDRS)
t_blas_g5_SOURCES = t_blas_g5.cc $(HDRS)
t_blas_g5_2_SOURCES = t_blas_g5_2.cc $(HDRS)
t_blas_g5_3_SOURCES = t_blas_g5_3.cc $(HDRS)
t_spinproj_SOURCES = t_spinproj.cc 
t_spinproj2_SOURCES = t_spinproj2.cc 
t_cugauge_SOURCES = t_cugauge.cc mesplq.cc $(HDRS) 
t_transpose_spin_SOURCES = t_transpose_spin.cc $(HDRS)
nersc2ildg_SOURCES = nersc2ildg.cc $(HDRS) mesplq.cc
test_ildglat_SOURCES = test_ildglat.cc $(HDRS) mesplq.cc
test_ildglat_DEPENDENCIES = build_lib
t_su3_SOURCES = t_su3.cc 
t_su3_DEPENDENCIES = build_lib
lhpc2ildg_SOURCES = lhpc2ildg.cc $(HDRS) mesplq.cc
lhpc2ildg_DEPENDENCIES = build_lib
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu examples/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu examples/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
lhpc2ildg$(EXEEXT): $(lhpc2ildg_OBJECTS) $(lhpc2ildg_DEPENDENCIES) 
	@rm -f lhpc2ildg$(EXEEXT)
	$(CXXLINK) $(lhpc2ildg_OBJECTS) $(lhpc2ildg_LDADD) $(LIBS)
nersc2ildg$(EXEEXT): $(nersc2ildg_OBJECTS) $(nersc2ildg_DEPENDENCIES) 
	@rm -f nersc2ildg$(EXEEXT)
	$(CXXLINK) $(nersc2ildg_OBJECTS) $(nersc2ildg_LDADD) $(LIBS)
t_basic$(EXEEXT): $(t_basic_OBJECTS) $(t_basic_DEPENDENCIES) 
	@rm -f t_basic$(EXEEXT)
	$(CXXLINK) $(t_basic_OBJECTS) $(t_basic_LDADD) $(LIBS)
t_blas$(EXEEXT): $(t_blas_OBJECTS) $(t_blas_DEPENDENCIES) 
	@rm -f t_blas$(EXEEXT)
	$(CXXLINK) $(t_blas_OBJECTS) $(t_blas_LDADD) $(LIBS)
t_blas_g5$(EXEEXT): $(t_blas_g5_OBJECTS) $(t_blas_g5_DEPENDENCIES) 
	@rm -f t_blas_g5$(EXEEXT)
	$(CXXLINK) $(t_blas_g5_OBJECTS) $(t_blas_g5_LDADD) $(LIBS)
t_blas_g5_2$(EXEEXT): $(t_blas_g5_2_OBJECTS) $(t_blas_g5_2_DEPENDENCIES) 
	@rm -f t_blas_g5_2$(EXEEXT)
	$(CXXLINK) $(t_blas_g5_2_OBJECTS) $(t_blas_g5_2_LDADD) $(LIBS)
t_blas_g5_3$(EXEEXT): $(t_blas_g5_3_OBJECTS) $(t_blas_g5_3_DEPENDENCIES) 
	@rm -f t_blas_g5_3$(EXEEXT)
	$(CXXLINK) $(t_blas_g5_3_OBJECTS) $(t_blas_g5_3_LDADD) $(LIBS)
t_cblas$(EXEEXT): $(t_cblas_OBJECTS) $(t_cblas_DEPENDENCIES) 
	@rm -f t_cblas$(EXEEXT)
	$(CXXLINK) $(t_cblas_OBJECTS) $(t_cblas_LDADD) $(LIBS)
t_clov_force$(EXEEXT): $(t_clov_force_OBJECTS) $(t_clov_force_DEPENDENCIES) 
	@rm -f t_clov_force$(EXEEXT)
	$(CXXLINK) $(t_clov_force_OBJECTS) $(t_clov_force_LDADD) $(LIBS)
t_cugauge$(EXEEXT): $(t_cugauge_OBJECTS) $(t_cugauge_DEPENDENCIES) 
	@rm -f t_cugauge$(EXEEXT)
	$(CXXLINK) $(t_cugauge_OBJECTS) $(t_cugauge_LDADD) $(LIBS)
t_db$(EXEEXT): $(t_db_OBJECTS) $(t_db_DEPENDENCIES) 
	@rm -f t_db$(EXEEXT)
	$(CXXLINK) $(t_db_OBJECTS) $(t_db_LDADD) $(LIBS)
t_dslashm$(EXEEXT): $(t_dslashm_OBJECTS) $(t_dslashm_DEPENDENCIES) 
	@rm -f t_dslashm$(EXEEXT)
	$(CXXLINK) $(t_dslashm_OBJECTS) $(t_dslashm_LDADD) $(LIBS)
t_entry$(EXEEXT): $(t_entry_OBJECTS) $(t_entry_DEPENDENCIES) 
	@rm -f t_entry$(EXEEXT)
	$(CXXLINK) $(t_entry_OBJECTS) $(t_entry_LDADD) $(LIBS)
t_exotic$(EXEEXT): $(t_exotic_OBJECTS) $(t_exotic_DEPENDENCIES) 
	@rm -f t_exotic$(EXEEXT)
	$(CXXLINK) $(t_exotic_OBJECTS) $(t_exotic_LDADD) $(LIBS)
t_foo$(EXEEXT): $(t_foo_OBJECTS) $(t_foo_DEPENDENCIES) 
	@rm -f t_foo$(EXEEXT)
	$(CXXLINK) $(t_foo_OBJECTS) $(t_foo_LDADD) $(LIBS)
t_formfac$(EXEEXT): $(t_formfac_OBJECTS) $(t_formfac_DEPENDENCIES) 
	@rm -f t_formfac$(EXEEXT)
	$(CXXLINK) $(t_formfac_OBJECTS) $(t_formfac_LDADD) $(LIBS)
t_gsum$(EXEEXT): $(t_gsum_OBJECTS) $(t_gsum_DEPENDENCIES) 
	@rm -f t_gsum$(EXEEXT)
	$(CXXLINK) $(t_gsum_OBJECTS) $(t_gsum_LDADD) $(LIBS)
t_io$(EXEEXT): $(t_io_OBJECTS) $(t_io_DEPENDENCIES) 
	@rm -f t_io$(EXEEXT)
	$(CXXLINK) $(t_io_OBJECTS) $(t_io_LDADD) $(LIBS)
t_iprod$(EXEEXT): $(t_iprod_OBJECTS) $(t_iprod_DEPENDENCIES) 
	@rm -f t_iprod$(EXEEXT)
	$(CXXLINK) $(t_iprod_OBJECTS) $(t_iprod_LDADD) $(LIBS)
t_linalg$(EXEEXT): $(t_linalg_OBJECTS) $(t_linalg_DEPENDENCIES) 
	@rm -f t_linalg$(EXEEXT)
	$(CXXLINK) $(t_linalg_OBJECTS) $(t_linalg_LDADD) $(LIBS)
t_map_obj_disk$(EXEEXT): $(t_map_obj_disk_OBJECTS) $(t_map_obj_disk_DEPENDENCIES) 
	@rm -f t_map_obj_disk$(EXEEXT)
	$(CXXLINK) $(t_map_obj_disk_OBJECTS) $(t_map_obj_disk_LDADD) $(LIBS)
t_map_obj_memory$(EXEEXT): $(t_map_obj_memory_OBJECTS) $(t_map_obj_memory_DEPENDENCIES) 
	@rm -f t_map_obj_memory$(EXEEXT)
	$(CXXLINK) $(t_map_obj_memory_OBJECTS) $(t_map_obj_memory_LDADD) $(LIBS)
t_mesplq$(EXEEXT): $(t_mesplq_OBJECTS) $(t_mesplq_DEPENDENCIES) 
	@rm -f t_mesplq$(EXEEXT)
	$(CXXLINK) $(t_mesplq_OBJECTS) $(t_mesplq_LDADD) $(LIBS)
t_nersc$(EXEEXT): $(t_nersc_OBJECTS) $(t_nersc_DEPENDENCIES) 
	@rm -f t_nersc$(EXEEXT)
	$(CXXLINK) $(t_nersc_OBJECTS) $(t_nersc_LDADD) $(LIBS)
t_partfile$(EXEEXT): $(t_partfile_OBJECTS) $(t_partfile_DEPENDENCIES) 
	@rm -f t_partfile$(EXEEXT)
	$(CXXLINK) $(t_partfile_OBJECTS) $(t_partfile_LDADD) $(LIBS)
t_qdp$(EXEEXT): $(t_qdp_OBJECTS) $(t_qdp_DEPENDENCIES) 
	@rm -f t_qdp$(EXEEXT)
	$(CXXLINK) $(t_qdp_OBJECTS) $(t_qdp_LDADD) $(LIBS)
t_qio$(EXEEXT): $(t_qio_OBJECTS) $(t_qio_DEPENDENCIES) 
	@rm -f t_qio$(EXEEXT)
	$(CXXLINK) $(t_qio_OBJECTS) $(t_qio_LDADD) $(LIBS)
t_qio_factory$(EXEEXT): $(t_qio_factory_OBJECTS) $(t_qio_factory_DEPENDENCIES) 
	@rm -f t_qio_factory$(EXEEXT)
	$(CXXLINK) $(t_qio_factory_OBJECTS) $(t_qio_factory_LDADD) $(LIBS)
t_shift$(EXEEXT): $(t_shift_OBJECTS) $(t_shift_DEPENDENCIES) 
	@rm -f t_shift$(EXEEXT)
	$(CXXLINK) $(t_shift_OBJECTS) $(t_shift_LDADD) $(LIBS)
t_skeleton$(EXEEXT): $(t_skeleton_OBJECTS) $(t_skeleton_DEPENDENCIES) 
	@rm -f t_skeleton$(EXEEXT)
	$(CXXLINK) $(t_skeleton_OBJECTS) $(t_skeleton_LDADD) $(LIBS)
t_spectrum$(EXEEXT): $(t_spectrum_OBJECTS) $(t_spectrum_DEPENDENCIES) 
	@rm -f t_spectrum$(EXEEXT)
	$(CXXLINK) $(t_spectrum_OBJECTS) $(t_spectrum_LDADD) $(LIBS)
t_spinproj$(EXEEXT): $(t_spinproj_OBJECTS) $(t_spinproj_DEPENDENCIES) 
	@rm -f t_spinproj$(EXEEXT)
	$(CXXLINK) $(t_spinproj_OBJECTS) $(t_spinproj_LDADD) $(LIBS)
t_spinproj2$(EXEEXT): $(t_spinproj2_OBJECTS) $(t_spinproj2_DEPENDENCIES) 
	@rm -f t_spinproj2$(EXEEXT)
	$(CXXLINK) $(t_spinproj2_OBJECTS) $(t_spinproj2_LDADD) $(LIBS)
t_su3$(EXEEXT): $(t_su3_OBJECTS) $(t_su3_DEPENDENCIES) 
	@rm -f t_su3$(EXEEXT)
	$(CXXLINK) $(t_su3_OBJECTS) $(t_su3_LDADD) $(LIBS)
t_subtype$(EXEEXT): $(t_subtype_OBJECTS) $(t_subtype_DEPENDENCIES) 
	@rm -f t_subtype$(EXEEXT)
	$(CXXLINK) $(t_subtype_OBJECTS) $(t_subtype_LDADD) $(LIBS)
t_transpose_spin$(EXEEXT): $(t_transpose_spin_OBJECTS) $(t_transpose_spin_DEPENDENCIES) 
	@rm -f t_transpose_spin$(EXEEXT)
	$(CXXLINK) $(t_transpose_spin_OBJECTS) $(t_transpose_spin_LDADD) $(LIBS)
t_xml$(EXEEXT): $(t_xml_OBJECTS) $(t_xml_DEPENDENCIES) 
	@rm -f t_xml$(EXEEXT)
	$(CXXLINK) $(t_xml_OBJECTS) $(t_xml_LDADD) $(LIBS)
test_ildglat$(EXEEXT): $(test_ildglat_OBJECTS) $(test_ildglat_DEPENDENCIES) 
	@rm -f test_ildglat$(EXEEXT)
	$(CXXLINK) $(test_ildglat_OBJECTS) $(test_ildglat_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/baryon_w.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/blas1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cblas1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dslashm_w.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/expm12.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/formfac_w.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lhpc2ildg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linalg1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mesons_w.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mesplq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nersc2ildg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reunit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rgauge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_basic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_blas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_blas_g5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_blas_g5_2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_blas_g5_3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_cblas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_clov_force.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_cugauge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_db.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_dslashm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_entry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_exotic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_foo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_formfac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_gsum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_io.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_iprod.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_linalg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_map_obj_disk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_map_obj_memory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_mesplq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_nersc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_partfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_qdp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_qio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_qio_factory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_shift.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_skeleton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_spectrum.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_spinproj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_spinproj2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_su3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_subtype.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_transpose_spin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_xml.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/taproj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ildglat.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean \
	clean-checkPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am


# build lib is a target that goes tot he build dir of the library and 
# does a make to make sure all those dependencies are OK. In order
# for it to be done every time, we have to make it a 'phony' target
.PHONY: build_lib
build_lib:
	cd @top_builddir@/lib ; $(MAKE)

.PHONY: rebuild_other_libs
rebuild_other_libs:
	cd @top_builddir@/other_libs ; $(MAKE)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
